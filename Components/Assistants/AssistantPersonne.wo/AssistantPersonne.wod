ContainerPersonneGestionEtapes : AjaxUpdateContainer {
	id = "ContainerPersonneGestionEtapes";
	class = "assistantEtapes";
}

Etapes : WORepetition {
	list = etapes;
	item = uneEtape;
}

DivEtape : WOGenericContainer {
  elementName = "div";
  class = styleForEtape;
}
Etape : WOString {
  value = uneEtape;
  escapeHTML = false;
}

isCreationMode : WOConditional {
	condition = isEditMode;
	negate = true;
}

isEditMode : WOConditional {
	condition = isEditMode;
}

SelectEtapeHyperLink : AjaxHyperlink {
	action = selectEtape;
	onSuccess = "function () {ContainerModuleAssistantPersonneUpdate();ContainerPersonneGestionMenuUpdate();ContainerPersonneGestionEtapesUpdate();}";
}

ContainerPersonneGestionContent : AjaxUpdateContainer {
	id = "ContainerPersonneGestionContent";
	class = "assistantContent";
}

Form : ERXWOForm {
	id = "AssistantPersonneFormGeneral";
    multipleSubmit = true;
    embedded = true;
}

Module : WOSwitchComponent {
	WOComponentName = moduleName;
	module = module;
	editingContext = editingContext;
	persType = ^persType;
	persTypeInterneExterne = ^persTypeInterneExterne;
	personne = personne;
	utilisateurPersId = utilisateurPersId;
	assistant = assistant;
	updateContainerId = ^updateContainerId;
	updateContainerIDOnSelectionnerPersonneInTableview = updateContainerIDOnSelectionnerPersonneInTableview;
	modeIndividu = ^modeIndividu;
	defaultTypeTel = ^defaultTypeTel;
	vlansAutorises = ^vlansAutorises;
	showEtatCivil = ^showEtatCivil;
	showDateValidite = ^showDateValidite;
	wantRefresh = wantRefreshEtapeModule;
	wantReset = wantRefreshEtapeModule;
}
ContainerModuleAssistantPersonne : AjaxUpdateContainer {
	id = "ContainerModuleAssistantPersonne";
	class = "assitantModuleContainer";
}

ContainerPersonneGestionMenu : AjaxUpdateContainer {
	id = "ContainerPersonneGestionMenu";
	//onRefreshComplete = "parent.$('DestinataireConventionModalBox_win_top').update('Creation de Harry cover');";
	// onRefreshComplete = onRefreshComplete;
	style = "height:28px;";
	class = "assistantMenu";
	
}

IsInModalWin : WOConditional {
	condition = isInModalWindow;
}

IsNotInModalWin : WOConditional {
	condition = isInModalWindow;
	negate = true;
}

AnnulerModal : CktlAjaxButton {
	onClick = "return confirm('Les données déjà saisies seront définitivement perdues ?');";
	action = annuler;
	title = "Annuler";
	text = "Tout annuler";
	type = "cancel";
	onSuccess = ^onSuccess;
}

Annuler : CktlButton {
	onClick = "return confirm('Les données déjà saisies seront définitivement perdues ?');";
	action = annuler;
	title = "Tout annuler";
	text = "Tout annuler";
	type = "cancel";
}

Precedent : CktlAjaxButton {
	action = precedent;
	onSuccess = "function () {ContainerModuleAssistantPersonneUpdate();ContainerPersonneGestionMenuUpdate();ContainerPersonneGestionEtapesUpdate();}";
	// disabled = isPrecedentDisabled;
	id = "BtnPrecedent";
	title = "Précédent";
	text = "Précédent";
	type = "previous";
	enabled = isPrecedentEnabled;
}
Suivant : CktlAjaxButton {
	action = suivant;
	onSuccess = "function () {ContainerModuleAssistantPersonneUpdate();ContainerPersonneGestionMenuUpdate();ContainerPersonneGestionEtapesUpdate();}";
	id = "Suivant1";
	title = "Suivant";
	text = "Suivant";
	type = "next";
	enabled = isSuivantEnabled;
	isImagePositionIsRight = true;
}

Terminer : CktlAjaxSubmitButton {
	action = terminer;
	updateContainerID = "ContainerModuleAssistantPersonne";
	text = "Enregistrer";
	enabled = isTerminerEnabled;
	type = "validate";
	title = "Valider et enregistrer";
	onSuccess = ^onSuccess;
}

//IsEtapeActive : WOConditional {
//  condition = isEtapeActive;
//}

